{"version":3,"sources":["ListItem.js","App.js","reportWebVitals.js","index.js"],"names":["ListItem","props","listitems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","duration","easing","library","add","faTrash","App","state","currentItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","console","log","newItems","filteredItems","filter","onSubmit","placeholder","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAmCeA,MA9Bf,SAAkBC,GACd,IACMC,EADQD,EAAME,MACIC,KAAI,SAAAC,GAExB,OAAO,qBAAKC,UAAU,OAAf,SACH,8BAEI,uBAAOC,KAAK,OAAOC,GAAIH,EAAKI,IAAKC,MAAOL,EAAKM,KAC7CL,UAAU,OACVM,SAAU,SAACC,GAAD,OAAKZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAML,EAAKI,QAEvD,+BACI,cAAC,IAAD,CAAkBH,UAAU,UAAUU,KAAK,QAC3CC,QAAS,kBAAIhB,EAAMiB,WAAWb,EAAKI,cATTJ,EAAKI,QAiB3C,OACI,8BACI,cAAC,IAAD,CAAUU,SAAU,IAAKC,OAAO,cAAhC,SACAlB,O,eCvBZmB,IAAQC,IAAIC,K,IA8FGC,E,kDA3FZ,WAAYvB,GAAO,IAAD,8BAChB,cAAMA,IACDwB,MAAM,CACTtB,MAAM,GACNuB,YAAY,CACVf,KAAK,GACLF,IAAI,MAKR,EAAKkB,YAAa,EAAKA,YAAYC,KAAjB,gBAClB,EAAKC,QAAS,EAAKA,QAAQD,KAAb,gBACd,EAAKV,WAAY,EAAKA,WAAWU,KAAhB,gBACjB,EAAKd,UAAU,EAAKA,UAAUc,KAAf,gBAdC,E,+CAkBlB,SAAYf,GACViB,KAAKC,SAAS,CACZL,YAAY,CACVf,KAAME,EAAEE,OAAOL,MACfD,IAAIuB,KAAKC,W,qBAKf,SAAQpB,GACNA,EAAEqB,iBACF,IAAMC,EAASL,KAAKL,MAAMC,YAI1B,GAHAU,QAAQC,IAAIF,EAAQ,eAGF,KAAfA,EAAQxB,KAAU,CACnB,IAAM2B,EAAQ,sBAAMR,KAAKL,MAAMtB,OAAjB,CAAuBgC,IACrCL,KAAKC,SAAS,CACZ5B,MAAMmC,EACNZ,YAAY,CACVf,KAAK,GACLF,IAAI,S,wBAMb,SAAWA,GACT,IAAM8B,EAAgBT,KAAKL,MAAMtB,MAAMqC,QAAO,SAAAnC,GAAI,OAChDA,EAAKI,MAAMA,KAEbqB,KAAKC,SAAS,CACZ5B,MAAMoC,M,uBAIV,SAAU5B,EAAKF,GACb,IAAMN,EAAQ2B,KAAKL,MAAMtB,MACzBA,EAAMC,KAAI,SAAAC,GACLA,EAAKI,MAAMA,IACZJ,EAAKM,KAAKA,MAGdmB,KAAKC,SAAS,CACZ5B,MAAMA,M,oBAGV,WACE,OACE,qCACA,4MACA,sBAAKG,UAAU,MAAf,UACE,iCACE,uBAAME,GAAG,aAAaiC,SAAUX,KAAKD,QAArC,UACE,uBAAOtB,KAAK,OAAOmC,YAAY,0BAC/BhC,MAAOoB,KAAKL,MAAMC,YAAYf,KAC9BC,SAAUkB,KAAKH,cAGf,wBAAQpB,KAAK,SAAb,wDAIJ,cAAC,EAAD,CAAUJ,MAAO2B,KAAKL,MAAMtB,MAC5Be,WAAYY,KAAKZ,WACjBJ,UAAWgB,KAAKhB,sB,GApFL6B,aCIJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f3f7c507.chunk.js","sourcesContent":["import React from 'react';\nimport './ListItem.css'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport FlipMove from 'react-flip-move';\n\nfunction ListItem(props) {\n    const items = props.items;\n    const listitems = items.map(item =>\n        {\n        return <div className='list' key={item.key}>\n            <p> \n                {/* Here we editing the value */}\n                <input type=\"text\" id={item.key} value={item.text}\n                className='text'\n                onChange={(e)=>props.setUpdate(e.target.value,item.key)}\n                />\n            <span>\n                <FontAwesomeIcon  className='faicons' icon='trash'\n                onClick={()=>props.deleteItem(item.key)} \n                />\n            \n                \n            </span>\n            </p>\n        </div>\n    })\n    return (\n        <div>\n            <FlipMove duration={500} easing='ease-in-out'>\n           {listitems}\n            </FlipMove>\n        </div>\n    )\n}\n\nexport default ListItem;\n","import React, { Component } from 'react'\nimport './App.css';\nimport ListItem  from './ListItem';\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {faTrash} from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faTrash);\n\n class App extends Component {\n   constructor(props){\n     super(props);\n     this.state={\n       items:[],\n       currentItem:{\n         text:\"\",\n         key:\" \"\n       }\n       \n     }\n     // Here we are finding the three event which we created\n     this.handleInput= this.handleInput.bind(this);\n     this.addItem= this.addItem.bind(this);\n     this.deleteItem= this.deleteItem.bind(this);\n     this.setUpdate=this.setUpdate.bind(this);\n\n   }\n   // used for targeting the current value from the input\n   handleInput(e){\n     this.setState({\n       currentItem:{\n         text: e.target.value,\n         key:Date.now()\n       }\n     })\n   }\n //this event used for adding the items\n   addItem(e){\n     e.preventDefault();\n     const newItem =this.state.currentItem ;\n     console.log(newItem,\"newwwwwwwww\")\n\n// here we checking the condition \n     if(newItem.text!==\"\"){\n       const newItems =[...this.state.items,newItem];\n       this.setState({\n         items:newItems,\n         currentItem:{\n           text:'',\n           key:'',\n         }\n       })\n     }\n   }\n// this event is for deleting the the items of comparing by the key\n  deleteItem(key){\n    const filteredItems = this.state.items.filter(item =>\n      item.key!==key\n    );\n    this.setState({\n      items:filteredItems\n    })\n  }\n\n  setUpdate(text,key){\n    const items = this.state.items;\n    items.map(item =>{\n      if(item.key===key){\n        item.text=text;\n      }\n    })\n    this.setState({\n      items:items\n    })\n  }\n  render() {\n    return (\n      <>\n      <h2>𝑻̲̅𝒐̲̅𝑫̲̅𝒐̲̅ 𝑨̲̅𝒑̲̅𝒑̲̅ </h2>\n      <div className=\"App\">\n        <header>\n          <form id='to-do-form' onSubmit={this.addItem}>\n            <input type='text' placeholder='✍️ Enter Text'\n            value={this.state.currentItem.text}\n            onChange={this.handleInput}\n\n            />\n            <button type='submit'>𝙰𝚍𝚍 </button>\n          </form>\n        </header>\n        {/* Here we are pasing the props to the ListItem Component */}\n        <ListItem items={this.state.items}\n        deleteItem={this.deleteItem} \n        setUpdate={this.setUpdate}\n        />\n      </div>\n      </>\n    )\n  }\n  \n}\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}